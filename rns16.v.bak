`timescale 1ns/1ps
`default_nettype none

module adder16_rns9 (
  input  wire        clk,
  input  wire        rst_n,

  // Bus entrée (8 bits parallèles, 2 cycles = 16 bits)
  input  wire [7:0]  in_byte,
  input  wire        in_valid,
  output wire        in_ready,

  // Bus sortie (16 bits après +2)
  output reg  [15:0] out_word,
  output reg         out_valid,
  input  wire        out_ready
);

  // ====================================================
  // Phase 1 — Capture 16b depuis bus 8b (LSB puis MSB)
  // ====================================================
  reg  [7:0]  x_lo, x_hi;
  reg         have_lo;     // 1 = LSB déjà capturé
  reg         v0;          // 1 = mot 16b complet prêt pour phase 2
  reg  [15:0] x0_16;

  // On accepte tant qu’on n’a pas un mot complet en attente
  assign in_ready = ~v0;

  always @(posedge clk) begin
    if (!rst_n) begin
      have_lo <= 1'b0;
      v0      <= 1'b0;
      x_lo    <= 8'd0;
      x_hi    <= 8'd0;
      x0_16   <= 16'd0;
    end else begin
      // Acceptation des octets
      if (in_ready && in_valid) begin
        if (!have_lo) begin
          x_lo    <= in_byte;     // 1er cycle : LSB
          have_lo <= 1'b1;
        end else begin
          x_hi    <= in_byte;     // 2e cycle : MSB
          have_lo <= 1'b0;
          v0      <= 1'b1;        // mot prêt
        end
      end

      // Passage à la phase 2 : latche le mot quand on le publie
      if (v0) begin
        x0_16 <= {x_hi, x_lo};
      end
    end
  end

  // ====================================================
  // Phase 2 — Binaire -> RNS (7,11,13,15,17,19,23,29,31)
  //            Par nibbles : x = n3 n2 n1 n0, avec 16^i mod m
  //            LUT 16 entrées pour c_i*nibble % m (aucun multiplieur)
  // ====================================================

  wire [3:0] n0 = x0_16[3:0];
  wire [3:0] n1 = x0_16[7:4];
  wire [3:0] n2 = x0_16[11:8];
  wire [3:0] n3 = x0_16[15:12];

  reg        v1;
  reg  [4:0] r7, r11, r13, r15, r17, r19, r23, r29, r31; // 5 bits suffisent (<=31)

  // ---------- LUT 16-entrées: (c_i * nibble) % m ----------
  // Générées pour chaque (mod m, coefficient c_i = 16^i % m)

  // m=7, c = [1,2,4,1]
  function [4:0] lut16_m7_c0; input [3:0] n; reg [4:0] lut; begin
    case (n)
      4'd0: lut = 5'd0;  4'd1: lut = 5'd1;  4'd2: lut = 5'd2;  4'd3: lut = 5'd3;
      4'd4: lut = 5'd4;  4'd5: lut = 5'd5;  4'd6: lut = 5'd6;  4'd7: lut = 5'd0;
      4'd8: lut = 5'd1;  4'd9: lut = 5'd2;  4'd10:lut = 5'd3;  4'd11:lut = 5'd4;
      4'd12:lut = 5'd5;  4'd13:lut = 5'd6;  4'd14:lut = 5'd0;  4'd15:lut = 5'd1;
    endcase lut16_m7_c0 = lut; end endfunction
  function [4:0] lut16_m7_c1; input [3:0] n; reg [4:0] lut; begin
    case (n)
      4'd0: lut = 5'd0;  4'd1: lut = 5'd2;  4'd2: lut = 5'd4;  4'd3: lut = 5'd6;
      4'd4: lut = 5'd1;  4'd5: lut = 5'd3;  4'd6: lut = 5'd5;  4'd7: lut = 5'd0;
      4'd8: lut = 5'd2;  4'd9: lut = 5'd4;  4'd10:lut = 5'd6;  4'd11:lut = 5'd1;
      4'd12:lut = 5'd3;  4'd13:lut = 5'd5;  4'd14:lut = 5'd0;  4'd15:lut = 5'd2;
    endcase lut16_m7_c1 = lut; end endfunction
  function [4:0] lut16_m7_c2; input [3:0] n; reg [4:0] lut; begin
    case (n)
      4'd0: lut = 5'd0;  4'd1: lut = 5'd4;  4'd2: lut = 5'd1;  4'd3: lut = 5'd5;
      4'd4: lut = 5'd2;  4'd5: lut = 5'd6;  4'd6: lut = 5'd3;  4'd7: lut = 5'd0;
      4'd8: lut = 5'd4;  4'd9: lut = 5'd1;  4'd10:lut = 5'd5;  4'd11:lut = 5'd2;
      4'd12:lut = 5'd6;  4'd13:lut = 5'd3;  4'd14:lut = 5'd0;  4'd15:lut = 5'd4;
    endcase lut16_m7_c2 = lut; end endfunction
  function [4:0] lut16_m7_c3; input [3:0] n; reg [4:0] lut; begin
    case (n)
      4'd0: lut = 5'd0;  4'd1: lut = 5'd1;  4'd2: lut = 5'd2;  4'd3: lut = 5'd3;
      4'd4: lut = 5'd4;  4'd5: lut = 5'd5;  4'd6: lut = 5'd6;  4'd7: lut = 5'd0;
      4'd8: lut = 5'd1;  4'd9: lut = 5'd2;  4'd10:lut = 5'd3;  4'd11:lut = 5'd4;
      4'd12:lut = 5'd5;  4'd13:lut = 5'd6;  4'd14:lut = 5'd0;  4'd15:lut = 5'd1;
    endcase lut16_m7_c3 = lut; end endfunction

  // m=11, c=[1,5,3,4]
  function [4:0] lut16_m11_c0; input [3:0] n; reg [4:0] lut; begin
    case(n)
      4'd0:0; 4'd1:1; 4'd2:2; 4'd3:3; 4'd4:4; 4'd5:5; 4'd6:6; 4'd7:7; 4'd8:8; 4'd9:9; 4'd10:10; 4'd11:0; 4'd12:1; 4'd13:2; 4'd14:3; 4'd15:4;
    endcase lut16_m11_c0=lut; end endfunction
  function [4:0] lut16_m11_c1; input [3:0] n; reg [4:0] lut; begin
    case(n)
      4'd0:0; 4'd1:5; 4'd2:10; 4'd3:4; 4'd4:9; 4'd5:3; 4'd6:8; 4'd7:2; 4'd8:7; 4'd9:1; 4'd10:6; 4'd11:0; 4'd12:5; 4'd13:10; 4'd14:4; 4'd15:9;
    endcase lut16_m11_c1=lut; end endfunction
  function [4:0] lut16_m11_c2; input [3:0] n; reg [4:0] lut; begin
    case(n)
      4'd0:0; 4'd1:3; 4'd2:6; 4'd3:9; 4'd4:1; 4'd5:4; 4'd6:7; 4'd7:10; 4'd8:2; 4'd9:5; 4'd10:8; 4'd11:0; 4'd12:3; 4'd13:6; 4'd14:9; 4'd15:1;
    endcase lut16_m11_c2=lut; end endfunction
  function [4:0] lut16_m11_c3; input [3:0] n; reg [4:0] lut; begin
    case(n)
      4'd0:0; 4'd1:4; 4'd2:8; 4'd3:1; 4'd4:5; 4'd5:9; 4'd6:2; 4'd7:6; 4'd8:10; 4'd9:3; 4'd10:7; 4'd11:0; 4'd12:4; 4'd13:8; 4'd14:1; 4'd15:5;
    endcase lut16_m11_c3=lut; end endfunction

  // m=13, c=[1,3,9,1]
  function [4:0] lut16_m13_c0; input [3:0] n; reg [4:0] lut; begin
    case(n)
      4'd0:0; 1:1; 2:2; 3:3; 4:4; 5:5; 6:6; 7:7; 8:8; 9:9; 10:10; 11:11; 12:12; 13:0; 14:1; 15:2;
    endcase lut16_m13_c0=lut; end endfunction
  function [4:0] lut16_m13_c1; input [3:0] n; reg [4:0] lut; begin
    case(n)
      0:0;1:3;2:6;3:9;4:12;5:2;6:5;7:8;8:11;9:1;10:4;11:7;12:10;13:0;14:3;15:6;
    endcase lut16_m13_c1=lut; end endfunction
  function [4:0] lut16_m13_c2; input [3:0] n; reg [4:0] lut; begin
    case(n)
      0:0;1:9;2:5;3:1;4:10;5:6;6:2;7:11;8:7;9:3;10:12;11:8;12:4;13:0;14:9;15:5;
    endcase lut16_m13_c2=lut; end endfunction
  function [4:0] lut16_m13_c3; input [3:0] n; reg [4:0] lut; begin
    case(n)
      0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:0;14:1;15:2;
    endcase lut16_m13_c3=lut; end endfunction

  // m=15, c=[1,1,1,1]
  function [4:0] lut16_m15_c0; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:0; endcase
    lut16_m15_c0=lut; end endfunction
  function [4:0] lut16_m15_c1; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:0; endcase
    lut16_m15_c1=lut; end endfunction
  function [4:0] lut16_m15_c2; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:0; endcase
    lut16_m15_c2=lut; end endfunction
  function [4:0] lut16_m15_c3; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:0; endcase
    lut16_m15_c3=lut; end endfunction

  // m=17, c=[1,16,1,16]
  function [4:0] lut16_m17_c0; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:15; endcase
    lut16_m17_c0=lut; end endfunction
  function [4:0] lut16_m17_c1; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:16;2:15;3:14;4:13;5:12;6:11;7:10;8:9;9:8;10:7;11:6;12:5;13:4;14:3;15:2; endcase
    lut16_m17_c1=lut; end endfunction
  function [4:0] lut16_m17_c2; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:15; endcase
    lut16_m17_c2=lut; end endfunction
  function [4:0] lut16_m17_c3; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:16;2:15;3:14;4:13;5:12;6:11;7:10;8:9;9:8;10:7;11:6;12:5;13:4;14:3;15:2; endcase
    lut16_m17_c3=lut; end endfunction

  // m=19, c=[1,16,9,11]
  function [4:0] lut16_m19_c0; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:15; endcase
    lut16_m19_c0=lut; end endfunction
  function [4:0] lut16_m19_c1; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:16;2:13;3:10;4:7;5:4;6:1;7:17;8:14;9:11;10:8;11:5;12:2;13:18;14:15;15:12; endcase
    lut16_m19_c1=lut; end endfunction
  function [4:0] lut16_m19_c2; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:9;2:18;3:8;4:17;5:7;6:16;7:6;8:15;9:5;10:14;11:4;12:13;13:3;14:12;15:2; endcase
    lut16_m19_c2=lut; end endfunction
  function [4:0] lut16_m19_c3; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:11;2:3;3:14;4:6;5:17;6:9;7:1;8:12;9:4;10:15;11:7;12:18;13:10;14:2;15:13; endcase
    lut16_m19_c3=lut; end endfunction

  // m=23, c=[1,16,3,2]
  function [4:0] lut16_m23_c0; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:15; endcase
    lut16_m23_c0=lut; end endfunction
  function [4:0] lut16_m23_c1; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:16;2:9;3:2;4:18;5:11;6:4;7:20;8:13;9:6;10:22;11:15;12:8;13:1;14:17;15:10; endcase
    lut16_m23_c1=lut; end endfunction
  function [4:0] lut16_m23_c2; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:3;2:6;3:9;4:12;5:15;6:18;7:21;8:1;9:4;10:7;11:10;12:13;13:16;14:19;15:22; endcase
    lut16_m23_c2=lut; end endfunction
  function [4:0] lut16_m23_c3; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:2;2:4;3:6;4:8;5:10;6:12;7:14;8:16;9:18;10:20;11:22;12:1;13:3;14:5;15:7; endcase
    lut16_m23_c3=lut; end endfunction

  // m=29, c=[1,16,24,7]
  function [4:0] lut16_m29_c0; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:15; endcase
    lut16_m29_c0=lut; end endfunction
  function [4:0] lut16_m29_c1; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:16;2:3;3:19;4:6;5:22;6:9;7:25;8:12;9:28;10:15;11:2;12:18;13:5;14:21;15:8; endcase
    lut16_m29_c1=lut; end endfunction
  function [4:0] lut16_m29_c2; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:24;2:19;3:14;4:9;5:4;6:28;7:23;8:18;9:13;10:8;11:3;12:27;13:22;14:17;15:12; endcase
    lut16_m29_c2=lut; end endfunction
  function [4:0] lut16_m29_c3; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:7;2:14;3:21;4:28;5:6;6:13;7:20;8:27;9:5;10:12;11:19;12:26;13:4;14:11;15:18; endcase
    lut16_m29_c3=lut; end endfunction

  // m=31, c=[1,16,8,4]
  function [4:0] lut16_m31_c0; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10;11:11;12:12;13:13;14:14;15:15; endcase
    lut16_m31_c0=lut; end endfunction
  function [4:0] lut16_m31_c1; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:16;2:1;3:17;4:2;5:18;6:3;7:19;8:4;9:20;10:5;11:21;12:6;13:22;14:7;15:23; endcase
    lut16_m31_c1=lut; end endfunction
  function [4:0] lut16_m31_c2; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:8;2:16;3:24;4:1;5:9;6:17;7:25;8:2;9:10;10:18;11:26;12:3;13:11;14:19;15:27; endcase
    lut16_m31_c2=lut; end endfunction
  function [4:0] lut16_m31_c3; input [3:0] n; reg [4:0] lut; begin
    case(n) 0:0;1:4;2:8;3:12;4:16;5:20;6:24;7:28;8:1;9:5;10:9;11:13;12:17;13:21;14:25;15:29; endcase
    lut16_m31_c3=lut; end endfunction

  // --- réduction locale: somme <= 4*(m-1) < 4*m, donc 0..3 soustractions suffisent
  function [4:0] reduce_sum_mod; input [7:0] t; input [5:0] m; reg [7:0] s; begin
    s = t;
    if (s >= m*3) s = s - m*3;
    else if (s >= m*2) s = s - m*2;
    else if (s >= m  ) s = s - m;
    reduce_sum_mod = s[4:0];
  end endfunction

  always @(posedge clk) begin
    if (!rst_n) begin
      v1 <= 1'b0;
      r7<=0; r11<=0; r13<=0; r15<=0; r17<=0; r19<=0; r23<=0; r29<=0; r31<=0;
    end else begin
      v1 <= v0;
      if (v0) begin
        // r_m = sum_i LUT(c_i * nibble_i) mod m
        r7  <= reduce_sum_mod( lut16_m7_c0(n0)+lut16_m7_c1(n1)+lut16_m7_c2(n2)+lut16_m7_c3(n3),  6'd7  );
        r11 <= reduce_sum_mod( lut16_m11_c0(n0)+lut16_m11_c1(n1)+lut16_m11_c2(n2)+lut16_m11_c3(n3),6'd11 );
        r13 <= reduce_sum_mod( lut16_m13_c0(n0)+lut16_m13_c1(n1)+lut16_m13_c2(n2)+lut16_m13_c3(n3),6'd13 );
        r15 <= reduce_sum_mod( lut16_m15_c0(n0)+lut16_m15_c1(n1)+lut16_m15_c2(n2)+lut16_m15_c3(n3),6'd15 );
        r17 <= reduce_sum_mod( lut16_m17_c0(n0)+lut16_m17_c1(n1)+lut16_m17_c2(n2)+lut16_m17_c3(n3),6'd17 );
        r19 <= reduce_sum_mod( lut16_m19_c0(n0)+lut16_m19_c1(n1)+lut16_m19_c2(n2)+lut16_m19_c3(n3),6'd19 );
        r23 <= reduce_sum_mod( lut16_m23_c0(n0)+lut16_m23_c1(n1)+lut16_m23_c2(n2)+lut16_m23_c3(n3),6'd23 );
        r29 <= reduce_sum_mod( lut16_m29_c0(n0)+lut16_m29_c1(n1)+lut16_m29_c2(n2)+lut16_m29_c3(n3),6'd29 );
        r31 <= reduce_sum_mod( lut16_m31_c0(n0)+lut16_m31_c1(n1)+lut16_m31_c2(n2)+lut16_m31_c3(n3),6'd31 );
      end
      // consomme le mot une fois publié à v1 (pipeline)
      if (v1) begin
        v0 <= 1'b0;
      end
    end
  end

  // ====================================================
  // Phase 3 — Opération (+2) en RNS (neuf moduli)
  // ====================================================
  reg        v2;
  reg  [4:0] r7p, r11p, r13p, r15p, r17p, r19p, r23p, r29p, r31p;

  function [4:0] add_mod2; input [4:0] a; input [5:0] m; reg [5:0] t; begin
    t = {1'b0,a} + 6'd2;
    if (t >= m) t = t - m;
    add_mod2 = t[4:0];
  end endfunction

  always @(posedge clk) begin
    if (!rst_n) begin
      v2 <= 1'b0;
      r7p<=0;r11p<=0;r13p<=0;r15p<=0;r17p<=0;r19p<=0;r23p<=0;r29p<=0;r31p<=0;
    end else begin
      v2 <= v1;
      if (v1) begin
        r7p  <= add_mod2(r7 ,  6'd7 );
        r11p <= add_mod2(r11,  6'd11);
        r13p <= add_mod2(r13,  6'd13);
        r15p <= add_mod2(r15,  6'd15);
        r17p <= add_mod2(r17,  6'd17);
        r19p <= add_mod2(r19,  6'd19);
        r23p <= add_mod2(r23,  6'd23);
        r29p <= add_mod2(r29,  6'd29);
        r31p <= add_mod2(r31,  6'd31);
      end
    end
  end

  // ====================================================
  // Phase 4 — CRT : reconstruction mod P=7*11*13*15*17=255255
  //                (suffisant pour repli 16 bits)
  //                S = Σ r_i * A_i (mod P). A_i pré-réduits.
  // ====================================================
  localparam [17:0] P = 18'd255255;

  // Mini-ROMs Ti: (r * A_i) % P   — ordonné: 7,11,13,15,17
  function [36:0] T7;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T7 = 37'd0;
      5'd1  : T7 = 37'd28651498590;
      5'd2  : T7 = 37'd57302997180;
      5'd3  : T7 = 37'd85954495770;
      5'd4  : T7 = 37'd14325749295;
      5'd5  : T7 = 37'd42977247885;
      5'd6  : T7 = 37'd71628746475;
      default: T7 = 37'd0;
    endcase
  end
endfunction

function [36:0] T11;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T11 = 37'd0;
      5'd1  : T11 = 37'd91163859150;
      5'd2  : T11 = 37'd82047473235;
      5'd3  : T11 = 37'd72931087320;
      5'd4  : T11 = 37'd63814701405;
      5'd5  : T11 = 37'd54698315490;
      5'd6  : T11 = 37'd45581929575;
      5'd7  : T11 = 37'd36465543660;
      5'd8  : T11 = 37'd27349157745;
      5'd9  : T11 = 37'd18232771830;
      5'd10 : T11 = 37'd9116385915;
      default: T11 = 37'd0;
    endcase
  end
endfunction

function [36:0] T13;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T13 = 37'd0;
      5'd1  : T13 = 37'd53997055035;
      5'd2  : T13 = 37'd7713865005;
      5'd3  : T13 = 37'd61710920040;
      5'd4  : T13 = 37'd15427730010;
      5'd5  : T13 = 37'd69424785045;
      5'd6  : T13 = 37'd23141595015;
      5'd7  : T13 = 37'd77138650050;
      5'd8  : T13 = 37'd30855460020;
      5'd9  : T13 = 37'd84852515055;
      5'd10 : T13 = 37'd38569325025;
      5'd11 : T13 = 37'd92566380060;
      5'd12 : T13 = 37'd46283190030;
      default: T13 = 37'd0;
    endcase
  end
endfunction

function [36:0] T15;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T15 = 37'd0;
      5'd1  : T15 = 37'd6685349671;
      5'd2  : T15 = 37'd13370699342;
      5'd3  : T15 = 37'd20056049013;
      5'd4  : T15 = 37'd26741398684;
      5'd5  : T15 = 37'd33426748355;
      5'd6  : T15 = 37'd40112098026;
      5'd7  : T15 = 37'd46797447697;
      5'd8  : T15 = 37'd53482797368;
      5'd9  : T15 = 37'd60168147039;
      5'd10 : T15 = 37'd66853496710;
      5'd11 : T15 = 37'd73538846381;
      5'd12 : T15 = 37'd80224196052;
      5'd13 : T15 = 37'd86909545723;
      5'd14 : T15 = 37'd93594895394;
      default: T15 = 37'd0;
    endcase
  end
endfunction

function [36:0] T17;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T17 = 37'd0;
      5'd1  : T17 = 37'd17696513835;
      5'd2  : T17 = 37'd35393027670;
      5'd3  : T17 = 37'd53089541505;
      5'd4  : T17 = 37'd70786055340;
      5'd5  : T17 = 37'd88482569175;
      5'd6  : T17 = 37'd5898837945;
      5'd7  : T17 = 37'd23595351780;
      5'd8  : T17 = 37'd41291865615;
      5'd9  : T17 = 37'd58988379450;
      5'd10 : T17 = 37'd76684893285;
      5'd11 : T17 = 37'd94381407120;
      5'd12 : T17 = 37'd11797675890;
      5'd13 : T17 = 37'd29494189725;
      5'd14 : T17 = 37'd47190703560;
      5'd15 : T17 = 37'd64887217395;
      5'd16 : T17 = 37'd82583731230;
      default: T17 = 37'd0;
    endcase
  end
endfunction

function [36:0] T19;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T19 = 37'd0;
      5'd1  : T19 = 37'd58056983985;
      5'd2  : T19 = 37'd15833722905;
      5'd3  : T19 = 37'd73890706890;
      5'd4  : T19 = 37'd31667445810;
      5'd5  : T19 = 37'd89724429795;
      5'd6  : T19 = 37'd47501168715;
      5'd7  : T19 = 37'd5277907635;
      5'd8  : T19 = 37'd63334891620;
      5'd9  : T19 = 37'd21111630540;
      5'd10 : T19 = 37'd79168614525;
      5'd11 : T19 = 37'd36945353445;
      5'd12 : T19 = 37'd95002337430;
      5'd13 : T19 = 37'd52779076350;
      5'd14 : T19 = 37'd10555815270;
      5'd15 : T19 = 37'd68612799255;
      5'd16 : T19 = 37'd26389538175;
      5'd17 : T19 = 37'd84446522160;
      5'd18 : T19 = 37'd42223261080;
      default: T19 = 37'd0;
    endcase
  end
endfunction

function [36:0] T23;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T23 = 37'd0;
      5'd1  : T23 = 37'd87200213100;
      5'd2  : T23 = 37'd74120181135;
      5'd3  : T23 = 37'd61040149170;
      5'd4  : T23 = 37'd47960117205;
      5'd5  : T23 = 37'd34880085240;
      5'd6  : T23 = 37'd21800053275;
      5'd7  : T23 = 37'd8720021310;
      5'd8  : T23 = 37'd95920234410;
      5'd9  : T23 = 37'd82840202445;
      5'd10 : T23 = 37'd69760170480;
      5'd11 : T23 = 37'd56680138515;
      5'd12 : T23 = 37'd43600106550;
      5'd13 : T23 = 37'd30520074585;
      5'd14 : T23 = 37'd17440042620;
      5'd15 : T23 = 37'd4360010655;
      5'd16 : T23 = 37'd91560223755;
      5'd17 : T23 = 37'd78480191790;
      5'd18 : T23 = 37'd65400159825;
      5'd19 : T23 = 37'd52320127860;
      5'd20 : T23 = 37'd39240095895;
      5'd21 : T23 = 37'd26160063930;
      5'd22 : T23 = 37'd13080031965;
      default: T23 = 37'd0;
    endcase
  end
endfunction

function [36:0] T29;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T29 = 37'd0;
      5'd1  : T29 = 37'd41495273820;
      5'd2  : T29 = 37'd82990547640;
      5'd3  : T29 = 37'd24205576395;
      5'd4  : T29 = 37'd65700850215;
      5'd5  : T29 = 37'd6915878970;
      5'd6  : T29 = 37'd48411152790;
      5'd7  : T29 = 37'd89906426610;
      5'd8  : T29 = 37'd31121455365;
      5'd9  : T29 = 37'd72616729185;
      5'd10 : T29 = 37'd13831757940;
      5'd11 : T29 = 37'd55327031760;
      5'd12 : T29 = 37'd96822305580;
      5'd13 : T29 = 37'd38037334335;
      5'd14 : T29 = 37'd79532608155;
      5'd15 : T29 = 37'd20747636910;
      5'd16 : T29 = 37'd62242910730;
      5'd17 : T29 = 37'd3457939485;
      5'd18 : T29 = 37'd44953213305;
      5'd19 : T29 = 37'd86448487125;
      5'd20 : T29 = 37'd27663515880;
      5'd21 : T29 = 37'd69158789700;
      5'd22 : T29 = 37'd10373818455;
      5'd23 : T29 = 37'd51869092275;
      5'd24 : T29 = 37'd93364366095;
      5'd25 : T29 = 37'd34579394850;
      5'd26 : T29 = 37'd76074668670;
      5'd27 : T29 = 37'd17289697425;
      5'd28 : T29 = 37'd58784971245;
      default: T29 = 37'd0;
    endcase
  end
endfunction

function [36:0] T31;
  input [4:0] r;
  begin
    case (r)
      5'd0  : T31 = 37'd0;
      5'd1  : T31 = 37'd16174233075;
      5'd2  : T31 = 37'd32348466150;
      5'd3  : T31 = 37'd48522699225;
      5'd4  : T31 = 37'd64696932300;
      5'd5  : T31 = 37'd80871165375;
      5'd6  : T31 = 37'd97045398450;
      5'd7  : T31 = 37'd12939386460;
      5'd8  : T31 = 37'd29113619535;
      5'd9  : T31 = 37'd45287852610;
      5'd10 : T31 = 37'd61462085685;
      5'd11 : T31 = 37'd77636318760;
      5'd12 : T31 = 37'd93810551835;
      5'd13 : T31 = 37'd9704539845;
      5'd14 : T31 = 37'd25878772920;
      5'd15 : T31 = 37'd42053005995;
      5'd16 : T31 = 37'd58227239070;
      5'd17 : T31 = 37'd74401472145;
      5'd18 : T31 = 37'd90575705220;
      5'd19 : T31 = 37'd6469693230;
      5'd20 : T31 = 37'd22643926305;
      5'd21 : T31 = 37'd38818159380;
      5'd22 : T31 = 37'd54992392455;
      5'd23 : T31 = 37'd71166625530;
      5'd24 : T31 = 37'd87340858605;
      5'd25 : T31 = 37'd3234846615;
      5'd26 : T31 = 37'd19409079690;
      5'd27 : T31 = 37'd35583312765;
      5'd28 : T31 = 37'd51757545840;
      5'd29 : T31 = 37'd67931778915;
      5'd30 : T31 = 37'd84106011990;
      default: T31 = 37'd0;
    endcase
  end
endfunction
